apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

apply plugin: 'maven-publish'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: "com.jfrog.bintray"

apply from: '../testformatter.gradle'

ext {
    PUBLISH_GROUP_ID = 'co.zsmb'
    PUBLISH_ARTIFACT_ID = 'materialdrawer-kt'
    PUBLISH_VERSION = '1.3.6'
}

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    api('com.mikepenz:materialdrawer:6.0.8@aar') {
        transitive = true
    }
    implementation "com.android.support:appcompat-v7:$support_lib_version"
    implementation "com.android.support:recyclerview-v7:$support_lib_version"
    implementation "com.android.support:support-annotations:$support_lib_version"
    implementation "com.android.support:design:$support_lib_version"
}

task androidJavadocs(type: Javadoc) {
    failOnError = false
    source = android.sourceSets.main.java.source
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.source
}

bintray {
    dryRun = false
    override = true

    Properties properties = new Properties()

    def localPropsFile = project.rootProject.file('local.properties')
    if (localPropsFile.exists()) {
        properties.load(localPropsFile.newDataInputStream())
    }

    user = properties.getProperty('bintrayUser') ?: System.getenv('BINTRAY_USER')
    key = properties.getProperty('bintrayKey') ?: System.getenv('BINTRAY_API_KEY')

    publications('release')

    pkg {
        repo = "MaterialDrawerKt"
        name = "MaterialDrawerKt"
        vcsUrl = "https://gitlab.com/zsmb/MaterialDrawerKt"

        publicDownloadNumbers = true
        licenses = ["Apache-2.0"]
        version {
            name = PUBLISH_VERSION
            vcsTag = PUBLISH_VERSION
            released = new Date()
        }
    }

    publishing {
        publications {
            release(MavenPublication) {
                groupId PUBLISH_GROUP_ID
                artifactId PUBLISH_ARTIFACT_ID
                version PUBLISH_VERSION
                artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
                artifact androidSourcesJar
                artifact androidJavadocsJar

                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    project.configurations.implementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}
